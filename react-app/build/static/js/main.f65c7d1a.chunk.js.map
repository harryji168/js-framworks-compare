{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","todos","setTodos","todoText","useRef","useEffect","existingTodos","localStorage","getItem","JSON","parse","map","todo","onSubmit","event","preventDefault","next","current","value","setItem","stringify","type","placeholder","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAwCeA,MArCf,WAGE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAWC,mBAgBjB,OAbAC,qBAAU,WACR,IAAMC,EAAgBC,aAAaC,QAAQ,SAC3CN,EAASI,EAAgBG,KAAKC,MAAMJ,GAAiB,MACpD,IAWD,gCACE,6BACGL,EAAMU,KAAI,SAAAC,GAAI,OAAK,6BAAgBA,GAAPA,QAG/B,uBAAMC,SAbV,SAAiBC,GACfA,EAAMC,iBACN,IAAMC,EAAI,sBAAOf,GAAP,CAAcE,EAASc,QAAQC,QACzChB,EAASc,GACTT,aAAaY,QAAQ,QAASV,KAAKW,UAAUJ,KAS3C,UACE,uBAAOK,KAAK,OAAOC,YAAY,yBAAyBC,IAAKpB,IAC7D,uBAAOkB,KAAK,SAASH,MAAM,oBCrBpBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f65c7d1a.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  // State\n  const [todos, setTodos] = useState([]);\n\n  // Binding\n  const todoText = useRef();\n\n  // Side Effects / Lifecycle\n  useEffect(() => {\n    const existingTodos = localStorage.getItem('todos');\n    setTodos(existingTodos ? JSON.parse(existingTodos) : []);\n  }, []);\n\n  // Events\n  function addTodo(event) {\n    event.preventDefault();\n    const next = [...todos, todoText.current.value];\n    setTodos(next);\n    localStorage.setItem('todos', JSON.stringify(next));\n  }\n\n  return (\n    <div>\n      <ul>\n        {todos.map(todo => (<li key={todo}>{todo}</li>))}  \n      </ul>\n\n      <form onSubmit={addTodo}>\n        <input type=\"text\" placeholder=\"What needs to be done?\" ref={todoText} />\n        <input type=\"submit\" value=\"Add Todo\" />\n      </form>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}